Preparation & Framing Document for team Funfetti Chicken:

Background and Context:
    Our project is based on taking a song, finding relevant information (e.g., lyrics, tempo, key) about it, and translating that to a sentiment. As a bit of a "flourish," the sentiments will then be mapped to an appropriate food with a (very subjective) pseudo-dictionary of our own devising.
    Currently, we've written and assembled the bulk of the "infrastructure" needed to get song information in the first place, and have built a small database of songs & song data for us to access online. The "moving parts" which we currently have are:
        - Song data harvesting--using Echo Nest API to search for, and retrieve, information about a song.
        - Database construction/storage - automating Echo Nest searches, and storing information (like tempo, name, artist) in a song_data object which is then preserved (with the Pickle module) for future reference.
        - Lyrics harvesting - getting lyrics from the web for a song using requests (a web accessing package) and string parsing (to turn the web output into something which python can "eval").
        - Lyrics sentiment analysis - using Pattern to get the overall "mood" of a song's lyrics. The lyrics themselves come from the aforementioned lyrics harvesting.
        - Song gathering - getting songs from the "Billboard" top 100 weekly songs. Uses HTML to gather songs from several years of Billboard data, and then collate this information into a list of ("artist","song") tuples which can then be passed on to the database construction.

Key Questions:
    We've created something to get, and store, nearly every bit of information we could want about a song. However, we're somewhat at a loss for what to do next.
    In particular: we want to use a machine learning approach to prepare our sentiment-classifying algorithm. We've got a couple of major questions as to how this can be addressed:
        - What sort of machine learning algorithms and/or packages would be best to use?
            - Relatedly, what approach should we take?
                - Should we, say, have an input of (tempo, key, lyric_sentiment, etc) and an output of (happiness, anger, etc)?            
                - Or is it better to just train for a single output: say, 3-4 variables in and 1 out?
            -Relevant info: None of us know anything about writing an algorithm for ML. We could try to as a stretch goal, but it would be handy to adapt existing libraries/tools.

        - How should we acquire training data?
            - We can get very general/vague information from the "Rovi" API - should we just get the moods for a lot of songs, and use some to train and some to test?
            - Alternatively, should we try to use human classification to get initial training data?
            - (Or, something else?)

Agenda:
    1. Begin with a brief overview of our project, and the state we're at right now.
    2. Move on to ideating on the ML front. We've addressed most of our pressing concerns vis-a-vis gathering information, songs, etc. in the first place - but, now we're uncertain what to *do* with this data; as such, this seems like a good focus.
    3. Depending on which ideas seem promising (and, using a few of our current ideas/possibilities), some "Technical discussion" as to what sorts of structures, algorithms, packages, etc. could be used to make ML ideas work.