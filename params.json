{"name":"Funfetti-chicken","tagline":"Music analysis software that uses sentiment analysis to decide what foods go with what music","body":"### Welcome to Funfetti Chicken\r\nFunfetti Chicken Project Proposal\r\n\r\n###The Big Idea\r\n\r\nThe main idea of the project is to take the tone, lyrics, tempo, and rating of music to determine the emotion expressed by the music and then generate a food list that perfectly matches the song. We will be exploring the concept of audio sentiment analysis that goes beyond positive or negative and extends to anger, sadness, happiness, lethargy, and whatever else we can pull out of music. The minimum viable product will be an algorithm that judges a song’s emotion based on one of the four song aspects described above (e.g., takes in song lyrics and outputs an emotional evaluation). The stretch goal is to have algorithms looking at those four aspects, paying special attention to those we deem most capable of determining the emotion of songs, and returning a perfect accompanying food.\r\n\r\n###Learning Goals\r\n\r\nWe want to learn to analyze data more specifically and more in depth than we had in previous projects. We hope to learn to effectively interpret multiple different types of data at a time, and figure out how to prioritize each type or combine multiple types.\r\n\r\n###Implementation Plan\r\n\r\nOur implementation would divide the overarching goal into multiple sub-functions or modules, which would converge to produce the output. \r\n\r\n\r\nLibraries which might prove useful: Pattern (for lyric analysis), Librosa (for tempo/key analysis), Echo Nest (for key/instrument analysis), \r\n\r\n###Project schedule\r\n\r\nweeks 1-2: complete MVP\r\nweeks 3-4: finish algorithms for at least ¾ major song aspects\r\nweeks 5-6: finish algorithms, add the food side, combine the algorithms into one program that work together\r\n\r\n###Collaboration plan\r\n\r\nWe’re used to working on a coding problem individually for a long period of time until eventually we figure it out, but we decided that it may be beneficial to try a different approach for this project. We’re going to try pair programming to see if that method works better for us, and if it doesn’t work very well we may switch to individually working on modules of the program and then combining them. We have four elements of music that we plan to analyze, so that will divide nicely among four people whether we’re pair programming or not. Once we’ve finished the algorithms for these elements, we’ll put our combined code on github and work on it as a whole. \r\n\r\n###Risks\r\n\r\n     Integrating the algorithms to analyze the music and translate them to food. In order to get an accurate translation we have to analyze many variables for each song and match them with correlated food. Getting the algorithms to effectively evaluate the music for sentiment as complicated as what we want could prove very tricky.\r\n\r\n\r\n###Additional Course Content\r\n\r\nIf we were to cover ways in which text analysis determines sentiment, that would be helpful for us in branching our sentiment analysis beyond just positive or negative. Otherwise we would have to rely mostly on libraries already available instead of building our own tools.\r\n\r\n________________________________________________________________________________________________________________________\r\n###Technical Review\r\n\r\n###Background and Context:\r\nOur project is an investigation of song sentiment and the ways we can use programming to analyze it. The end goal is to use machine learning to give our program the ability to categorize new songs based on a training set. We are using a variety of APIs to gather essential data on songs in order to create the training set and give the program the information it needs to analyze new songs. Once the sentiment of the song has been realized, the program will offer choice foods to go with the song.\r\n###Key Questions:\r\nWhat we most want to learn from the review is what machine learning technique will be best for the information we are trying to gather. Also, we need to find an efficient way of generating a training data set, so any opinions on other APIs that would help our project would be greatly appreciated.\r\n###Agenda:\r\nWe plan to give a brief summary of what our project is, what the finished product will look like, and what we have so far. The rest of the time will be allotted to surveying the group about the key questions we have listed above and facilitating general discussion of our ideas and chosen methods.\r\n\r\n\r\n### Authors and Contributors\r\n@buttegab, @jgraupirozzi, @matthewruehle, and @adority\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}